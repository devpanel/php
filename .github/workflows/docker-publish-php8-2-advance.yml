name: Docker build and push PHP8.2-advance

env:
  IMAGE_TAG: ${{ secrets.DOCKERHUB_USERNAME }}/php:8.2-advance-rc

on:
  push:
    paths:
      - "8.2/advance/**"
    branches:
      - main
      - develop
  workflow_run:
    workflows: ["Docker build and push PHP8.2-secure"]
    types:
      - completed
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    steps:
      - name: Set env to production environment
        if:  ${{ github.event_name == 'push' && github.ref == 'refs/heads/main'  || github.event_name == 'workflow_run' &&  github.event.workflow_run.head_branch == 'main' }}
        run: |
          echo "IMAGE_TAG=${{ secrets.DOCKERHUB_USERNAME }}/php:8.2-advance" >> $GITHUB_ENV

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6
        with:
          file: ./8.2/advance/Dockerfile
          context: ./8.2/advance/
          tags: ${{ env.IMAGE_TAG }}
          platforms: ${{ matrix.platform }}
          outputs: type=image,push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: |
          mkdir -p ${{ runner.temp }}/digests
          digest="${{ steps.build.outputs.digest }}"
          echo $digest > ${{ runner.temp }}/digests/${{ matrix.platform }}.digest

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ matrix.platform }}
          path: ${{ runner.temp }}/digests/
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-*
          merge-multiple: true

      - name: Create manifest list and push
        working-directory: ${{ runner.temp }}/digests
        run: |
          docker buildx imagetools create \
            -t ${{ env.IMAGE_TAG }} \
            $(for f in *.digest; do echo "${{ env.IMAGE_TAG }}@$(cat $f)"; done)
